
 /// <reference path="./unittest.d.ts"/>
 import "package:unittest/unittest.dart" as t ; import "lib.dart" show MyClass , MySubclass , SomeArray ; void main ( ) { t . test ( "handles classes" , ( ) { var mc = new MyClass ( "hello" ) ; t . expect ( mc . field . toUpperCase ( ) , t . equals ( "HELLO WORLD" ) ) ; t . expect ( mc . namedParam ( x : "!" ) , t . equals ( "hello!" ) ) ; t . expect ( mc . namedParam ( ) , t . equals ( "hello?" ) ) ; } ) ; t . test ( "allows subclassing and casts" , ( ) { MyClass mc ; mc = new MySubclass ( "hello" ) ; t . expect ( ( ( mc as MySubclass ) ) . subclassField , t . equals ( "hello world" ) ) ; } ) ; t . test ( "string templates" , ( ) { t . expect ( "\$mc" , t . equals ( "\$mc" ) ) ; var a = "hello" ; var b = "world" ; t . expect ( '''${ a} ${ b}''' , t . equals ( "hello world" ) ) ; } ) ; t . test ( "regexp" , ( ) { t . expect ( new RegExp ( r'o\.' ) . hasMatch ( "fo.o" ) , t . equals ( true ) ) ; t . expect ( new RegExp ( r'o' ) . allMatches ( "fo.o" ) . toList ( ) . length , t . equals ( 2 ) ) ; } ) ; t . test ( "const expr" , ( ) { t . expect ( SomeArray [ 0 ] , t . equals ( 1 ) ) ; } ) ; }