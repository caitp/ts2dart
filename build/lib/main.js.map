{"version":3,"sources":["main.ts"],"names":["Transpiler","Transpiler.constructor","Transpiler.transpile","Transpiler.translateProgram","Transpiler.getCompilerOptions","Transpiler.createCompilerHost","Transpiler.createCompilerHost.writeFile","Transpiler.getOutputPath","Transpiler.translate","Transpiler.checkForErrors","Transpiler.getRelativeFileName","Transpiler.emit","Transpiler.emitNoSpace","Transpiler.reportError","Transpiler.visit","Transpiler.normalizeSlashes","Output","Output.constructor","Output.emit","Output.emitNoSpace","Output.getResult","Output.addSourceMapping","Output.generateSourceMapComment"],"mappings":"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","file":"main.js","sourcesContent":["/// <reference path='../typings/fs-extra/fs-extra.d.ts' />\n/// <reference path='../typings/node/node.d.ts' />\n/// <reference path='../typings/source-map/source-map.d.ts' />\n// Use the version of typescript installed by npm.\n/// <reference path='../node_modules/typescript/bin/typescript.d.ts' />\n/// <reference path='../typings/minimist/minimist.d.ts' />\nrequire('source-map-support').install();\nimport SourceMap = require('source-map');\nimport fs = require('fs');\nimport fsx = require('fs-extra');\nimport path = require('path');\nimport ts = require('typescript');\n\nimport base = require('./base');\nimport CallTranspiler = require('./call');\nimport DeclarationTranspiler = require('./declaration');\nimport ExpressionTranspiler = require('./expression');\nimport ModuleTranspiler from './module';\nimport StatementTranspiler = require('./statement');\nimport TypeTranspiler = require('./type');\nimport LiteralTranspiler = require('./literal');\nimport {FacadeConverter} from './facade_converter';\n\nexport interface TranspilerOptions {\n  /**\n   * Fail on the first error, do not collect multiple. Allows easier debugging as stack traces lead\n   * directly to the offending line.\n   */\n  failFast?: boolean;\n  /** Whether to generate 'library a.b.c;' names from relative file paths. */\n  generateLibraryName?: boolean;\n  /** Whether to generate source maps. */\n  generateSourceMap?: boolean;\n  /**\n   * A base path to relativize absolute file paths against. This is useful for library name\n   * generation (see above) and nicer file names in error messages.\n   */\n  basePath?: string;\n  /**\n   * Translate calls to builtins, i.e. seemlessly convert from `Array` to `List`, and convert the\n   * corresponding methods. Requires type checking.\n   */\n  translateBuiltins?: boolean;\n}\n\nexport const COMPILER_OPTIONS: ts.CompilerOptions = {\n  allowNonTsExtensions: true,\n  module: ts.ModuleKind.CommonJS,\n  target: ts.ScriptTarget.ES5,\n};\n\nexport class Transpiler {\n  private output: Output;\n  private currentFile: ts.SourceFile;\n\n  // Comments attach to all following AST nodes before the next 'physical' token. Track the earliest\n  // offset to avoid printing comments multiple times.\n  private lastCommentIdx: number = -1;\n  private errors: string[] = [];\n\n  private transpilers: base.TranspilerBase[];\n  private fc: FacadeConverter;\n\n  constructor(private options: TranspilerOptions = {}) {\n    this.fc = new FacadeConverter(this);\n    this.transpilers = [\n      new CallTranspiler(this, this.fc),  // Has to come before StatementTranspiler!\n      new DeclarationTranspiler(this, this.fc),\n      new ExpressionTranspiler(this, this.fc),\n      new LiteralTranspiler(this, this.fc),\n      new ModuleTranspiler(this, this.fc, options.generateLibraryName),\n      new StatementTranspiler(this),\n      new TypeTranspiler(this, this.fc),\n    ];\n  }\n\n  /**\n   * Transpiles the given files to Dart.\n   * @param fileNames The input files.\n   * @param destination Location to write files to. Creates files next to their sources if absent.\n   */\n  transpile(fileNames: string[], destination?: string): void {\n    if (this.options.basePath) {\n      this.options.basePath = this.normalizeSlashes(this.options.basePath);\n    }\n    fileNames = fileNames.map((f) => this.normalizeSlashes(f));\n    var host = this.createCompilerHost();\n    if (this.options.basePath && destination === undefined) {\n      throw new Error('Must have a destination path when a basePath is specified ' +\n                      this.options.basePath);\n    }\n    var destinationRoot = destination || this.options.basePath || '';\n    var program = ts.createProgram(fileNames, this.getCompilerOptions(), host);\n    if (this.options.translateBuiltins) {\n      this.fc.setTypeChecker(program.getTypeChecker());\n    }\n\n    // Only write files that were explicitly passed in.\n    var fileSet: {[s: string]: boolean} = {};\n    fileNames.forEach((f) => fileSet[f] = true);\n\n    this.errors = [];\n    program.getSourceFiles()\n        .filter((sourceFile) => fileSet[sourceFile.fileName])\n        // Do not generate output for .d.ts files.\n        .filter((sourceFile: ts.SourceFile) => !sourceFile.fileName.match(/\\.d\\.ts$/))\n        .forEach((f: ts.SourceFile) => {\n          var dartCode = this.translate(f);\n          var outputFile = this.getOutputPath(f.fileName, destinationRoot);\n          fsx.mkdirsSync(path.dirname(outputFile));\n          fs.writeFileSync(outputFile, dartCode);\n        });\n    this.checkForErrors(program);\n  }\n\n  translateProgram(program: ts.Program): {[path: string]: string} {\n    if (this.options.translateBuiltins) {\n      this.fc.setTypeChecker(program.getTypeChecker());\n    }\n    var paths: {[path: string]: string} = {};\n    this.errors = [];\n    program.getSourceFiles()\n        .filter((sourceFile: ts.SourceFile) => (!sourceFile.fileName.match(/\\.d\\.ts$/) &&\n                                                !!sourceFile.fileName.match(/\\.[jt]s$/)))\n        .forEach((f) => paths[f.fileName] = this.translate(f));\n    this.checkForErrors(program);\n    return paths;\n  }\n\n  private getCompilerOptions() {\n    var opts: ts.CompilerOptions = {};\n    for (var k in COMPILER_OPTIONS) opts[k] = COMPILER_OPTIONS[k];\n    opts.rootDir = this.options.basePath;\n    return opts;\n  }\n\n  private createCompilerHost(): ts.CompilerHost {\n    var defaultLibFileName = ts.getDefaultLibFileName(COMPILER_OPTIONS);\n    defaultLibFileName = this.normalizeSlashes(defaultLibFileName);\n    return {\n      getSourceFile: (sourceName, languageVersion) => {\n        var path = sourceName;\n        if (sourceName === defaultLibFileName) {\n          path = ts.getDefaultLibFilePath(COMPILER_OPTIONS);\n        }\n        if (!fs.existsSync(path)) return undefined;\n        var contents = fs.readFileSync(path, 'UTF-8');\n        return ts.createSourceFile(sourceName, contents, COMPILER_OPTIONS.target, true);\n      },\n      writeFile(name, text, writeByteOrderMark) { fs.writeFile(name, text); },\n      getDefaultLibFileName: () => defaultLibFileName,\n      useCaseSensitiveFileNames: () => true,\n      getCanonicalFileName: (filename) => filename,\n      getCurrentDirectory: () => '',\n      getNewLine: () => '\\n'\n    };\n  }\n\n  // Visible for testing.\n  getOutputPath(filePath: string, destinationRoot: string): string {\n    var relative = this.getRelativeFileName(filePath);\n    var dartFile = relative.replace(/.(js|es6|ts)$/, '.dart');\n    return this.normalizeSlashes(path.join(destinationRoot, dartFile));\n  }\n\n  private translate(sourceFile: ts.SourceFile): string {\n    this.currentFile = sourceFile;\n    this.output =\n        new Output(sourceFile, this.getRelativeFileName(), this.options.generateSourceMap);\n    this.lastCommentIdx = -1;\n    this.visit(sourceFile);\n    return this.output.getResult();\n  }\n\n  private checkForErrors(program: ts.Program) {\n    var errors = this.errors;\n\n    var diagnostics = program.getGlobalDiagnostics().concat(program.getSyntacticDiagnostics());\n\n    if ((errors.length || diagnostics.length) && this.options.translateBuiltins) {\n      // Only report semantic diagnostics if ts2dart failed; this code is not a generic compiler, so\n      // only yields TS errors if they could be the cause of ts2dart issues.\n      // This greatly speeds up tests and execution.\n      diagnostics = diagnostics.concat(program.getSemanticDiagnostics());\n    }\n\n    var diagnosticErrs = diagnostics.map((d) => {\n      var msg = '';\n      if (d.file) {\n        let pos = d.file.getLineAndCharacterOfPosition(d.start);\n        let fn = this.getRelativeFileName(d.file.fileName);\n        msg += ` ${fn}:${pos.line + 1}:${pos.character + 1}`;\n      }\n      msg += ': ';\n      msg += ts.flattenDiagnosticMessageText(d.messageText, '\\n');\n      return msg;\n    });\n    if (diagnosticErrs.length) errors = errors.concat(diagnosticErrs);\n\n    if (errors.length) {\n      var e = new Error(errors.join('\\n'));\n      e.name = 'TS2DartError';\n      throw e;\n    }\n  }\n\n  /**\n   * Returns `filePath`, relativized to the program's `basePath`.\n   * @param filePath Optional path to relativize, defaults to the current file's path.\n   */\n  getRelativeFileName(filePath?: string) {\n    if (filePath === undefined) filePath = this.currentFile.fileName;\n    // TODO(martinprobst): Use path.isAbsolute on node v0.12.\n    if (this.normalizeSlashes(path.resolve('/x/', filePath)) !== filePath) {\n      return filePath;  // already relative.\n    }\n    var base = this.options.basePath || '';\n    if (filePath.indexOf(base) !== 0 && !filePath.match(/\\.d\\.ts$/)) {\n      throw new Error(`Files must be located under base, got ${filePath} vs ${base}`);\n    }\n    return this.normalizeSlashes(path.relative(base, filePath));\n  }\n\n  emit(s: string) { this.output.emit(s); }\n  emitNoSpace(s: string) { this.output.emitNoSpace(s); }\n\n  reportError(n: ts.Node, message: string) {\n    var file = n.getSourceFile() || this.currentFile;\n    var fileName = this.getRelativeFileName(file.fileName);\n    var start = n.getStart(file);\n    var pos = file.getLineAndCharacterOfPosition(start);\n    // Line and character are 0-based.\n    var fullMessage = `${fileName}:${pos.line + 1}:${pos.character + 1}: ${message}`;\n    if (this.options.failFast) throw new Error(fullMessage);\n    this.errors.push(fullMessage);\n  }\n\n  visit(node: ts.Node) {\n    this.output.addSourceMapping(node);\n    var comments = ts.getLeadingCommentRanges(this.currentFile.text, node.getFullStart());\n    if (comments) {\n      comments.forEach((c) => {\n        if (c.pos <= this.lastCommentIdx) return;\n        this.lastCommentIdx = c.pos;\n        var text = this.currentFile.text.substring(c.pos, c.end);\n        this.emitNoSpace('\\n');\n        this.emit(text);\n        if (c.hasTrailingNewLine) this.emitNoSpace('\\n');\n      });\n    }\n\n    for (var i = 0; i < this.transpilers.length; i++) {\n      if (this.transpilers[i].visitNode(node)) return;\n    }\n\n    this.reportError(node, 'Unsupported node type ' + (<any>ts).SyntaxKind[node.kind] + ': ' +\n                               node.getFullText());\n  }\n\n  private normalizeSlashes(path: string) { return path.replace(/\\\\/g, '/'); }\n}\n\nclass Output {\n  private result: string = '';\n  private column: number = 1;\n  private line: number = 1;\n\n  // Position information.\n  private generateSourceMap: boolean;\n  private sourceMap: SourceMap.SourceMapGenerator;\n\n  constructor(private currentFile: ts.SourceFile, private relativeFileName: string,\n              generateSourceMap: boolean) {\n    if (generateSourceMap) {\n      this.sourceMap = new SourceMap.SourceMapGenerator({file: relativeFileName + '.dart'});\n      this.sourceMap.setSourceContent(relativeFileName, this.currentFile.text);\n    }\n  }\n\n  emit(str: string) {\n    this.emitNoSpace(' ');\n    this.emitNoSpace(str);\n  }\n\n  emitNoSpace(str: string) {\n    this.result += str;\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === '\\n') {\n        this.line++;\n        this.column = 0;\n      } else {\n        this.column++;\n      }\n    }\n  }\n\n  getResult(): string { return this.result + this.generateSourceMapComment(); }\n\n  addSourceMapping(n: ts.Node) {\n    if (!this.sourceMap) return;  // source maps disabled.\n    var file = n.getSourceFile() || this.currentFile;\n    var start = n.getStart(file);\n    var pos = file.getLineAndCharacterOfPosition(start);\n\n    var mapping: SourceMap.Mapping = {\n      original: {line: pos.line + 1, column: pos.character},\n      generated: {line: this.line, column: this.column},\n      source: this.relativeFileName,\n    };\n\n    this.sourceMap.addMapping(mapping);\n  }\n\n  private generateSourceMapComment() {\n    if (!this.sourceMap) return '';\n    var base64map = new Buffer(JSON.stringify(this.sourceMap)).toString('base64');\n    return '\\n\\n//# sourceMappingURL=data:application/json;base64,' + base64map;\n  }\n}\n\n// CLI entry point\nif (require.main === module) {\n  var args = require('minimist')(process.argv.slice(2), {base: 'string'});\n  try {\n    let transpiler = new Transpiler(args);\n    console.log('Transpiling', args._, 'to', args.destination);\n    transpiler.transpile(args._, args.destination);\n  } catch (e) {\n    if (e.name !== 'TS2DartError') throw e;\n    console.log(e.message);\n    process.exit(1);\n  }\n}\n"],"sourceRoot":"/source/"}