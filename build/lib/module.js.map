{"version":3,"sources":["module.ts"],"names":["ModuleTranspiler","ModuleTranspiler.constructor","ModuleTranspiler.visitNode","ModuleTranspiler.isIgnoredImport","ModuleTranspiler.visitExternalModuleReferenceExpr","ModuleTranspiler.isEmptyImport","ModuleTranspiler.filterImports","ModuleTranspiler.getLibraryName"],"mappings":";;;;;;AAAA,uEAAuE;AACvE,IAAO,EAAE,WAAW,YAAY,CAAC,CAAC;AAClC,IAAO,IAAI,WAAW,QAAQ,CAAC,CAAC;AAIhC;IAA8CA,oCAAmBA;IAC/DA,0BAAYA,EAAsBA,EAAUA,EAAmBA,EAC3CA,mBAA4BA;QAC9CC,kBAAMA,EAAEA,CAACA,CAACA;QAFgCA,OAAEA,GAAFA,EAAEA,CAAiBA;QAC3CA,wBAAmBA,GAAnBA,mBAAmBA,CAASA;IAEhDA,CAACA;IAEDD,oCAASA,GAATA,UAAUA,IAAaA;QACrBE,MAAMA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;YAClBA,KAAKA,oBAAwBA;gBAC3BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,mBAAmBA,CAACA,CAACA,CAACA;oBAC7BA,IAAIA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;oBACrBA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,cAAcA,EAAEA,CAACA,CAACA;oBACjCA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACjBA,CAACA;gBACDA,EAAEA,CAACA,YAAYA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;gBAC7CA,KAAKA,CAACA;YACRA,KAAKA,sBAA4BA;gBAC/BA,EAAEA,CAACA,YAAYA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA;gBAC7CA,KAAKA,CAACA;YACRA,KAAKA,2BAA+BA;gBAClCA,IAAIA,UAAUA,GAAyBA,IAAIA,CAACA;gBAC5CA,EAAEA,CAACA,CAACA,IAAIA,CAACA,aAAaA,CAACA,UAAUA,CAACA,CAACA;oBAACA,MAAMA,CAACA,IAAIA,CAACA;gBAChDA,IAAIA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;gBACpBA,IAAIA,CAACA,gCAAgCA,CAACA,UAAUA,CAACA,eAAeA,CAACA,CAACA;gBAClEA,EAAEA,CAACA,CAACA,UAAUA,CAACA,YAAYA,CAACA,CAACA,CAACA;oBAC5BA,IAAIA,CAACA,KAAKA,CAACA,UAAUA,CAACA,YAAYA,CAACA,CAACA;gBACtCA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACNA,IAAIA,CAACA,WAAWA,CAACA,UAAUA,EAAEA,4BAA4BA,CAACA,CAACA;gBAC7DA,CAACA;gBACDA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACfA,KAAKA,CAACA;YACRA,KAAKA,sBAA0BA;gBAC7BA,IAAIA,YAAYA,GAAoBA,IAAIA,CAACA;gBACzCA,EAAEA,CAACA,CAACA,YAAYA,CAACA,IAAIA,CAACA;oBAACA,IAAIA,CAACA,EAAEA,CAACA,aAAaA,CAACA,YAAYA,CAACA,IAAIA,CAACA,CAACA;gBAChEA,EAAEA,CAACA,CAACA,YAAYA,CAACA,aAAaA,CAACA,CAACA,CAACA;oBAC/BA,IAAIA,CAACA,KAAKA,CAACA,YAAYA,CAACA,aAAaA,CAACA,CAACA;gBACzCA,CAACA;gBACDA,KAAKA,CAACA;YACRA,KAAKA,yBAA6BA;gBAChCA,IAAIA,QAAQA,GAAuBA,IAAIA,CAACA;gBACxCA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBAChBA,IAAIA,CAACA,EAAEA,CAACA,aAAaA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA;gBACrCA,KAAKA,CAACA;YACRA,KAAKA,sBAA0BA;gBAC7BA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAClBA,IAAIA,IAAIA,GAAGA,IAAIA,CAACA,aAAaA,CAAmBA,IAAKA,CAACA,QAAQA,CAACA,CAACA;gBAChEA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CAACA,CAACA;oBACtBA,IAAIA,CAACA,WAAWA,CAACA,IAAIA,EAAEA,gDAAgDA,CAACA,CAACA;gBAC3EA,CAACA;gBACDA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,CAACA;gBACrBA,KAAKA,CAACA;YACRA,KAAKA,sBAA0BA;gBAC7BA,IAAIA,cAAcA,GAAqBA,IAAKA,CAACA,QAAQA,CAACA;gBACtDA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAClBA,EAAEA,CAACA,CAACA,cAAcA,CAACA,MAAMA,KAAKA,CAACA,CAACA;oBAACA,IAAIA,CAACA,WAAWA,CAACA,IAAIA,EAAEA,mBAAmBA,CAACA,CAACA;gBAC7EA,IAAIA,CAACA,SAASA,CAAmBA,IAAKA,CAACA,QAAQA,CAACA,CAACA;gBACjDA,KAAKA,CAACA;YACRA,KAAKA,yBAA6BA,CAACA;YACnCA,KAAKA,yBAA6BA;gBAChCA,IAAIA,IAAIA,GAA+BA,IAAIA,CAACA;gBAC5CA,EAAEA,CAACA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA,CAACA;oBACtBA,IAAIA,CAACA,WAAWA,CAACA,IAAIA,CAACA,YAAYA,EAAEA,+CAA+CA,CAACA,CAACA;gBACvFA,CAACA;gBACDA,IAAIA,CAACA,EAAEA,CAACA,aAAaA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBACjCA,KAAKA,CAACA;YACRA,KAAKA,2BAA+BA;gBAClCA,IAAIA,UAAUA,GAAyBA,IAAIA,CAACA;gBAC5CA,IAAIA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;gBACpBA,EAAEA,CAACA,CAACA,UAAUA,CAACA,eAAeA,CAACA,CAACA,CAACA;oBAC/BA,IAAIA,CAACA,gCAAgCA,CAACA,UAAUA,CAACA,eAAeA,CAACA,CAACA;gBACpEA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACNA,IAAIA,CAACA,WAAWA,CAACA,IAAIA,EAAEA,0DAA0DA,CAACA,CAACA;gBACrFA,CAACA;gBACDA,EAAEA,CAACA,CAACA,UAAUA,CAACA,YAAYA,CAACA;oBAACA,IAAIA,CAACA,KAAKA,CAACA,UAAUA,CAACA,YAAYA,CAACA,CAACA;gBACjEA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACfA,KAAKA,CAACA;YACRA,KAAKA,iCAAqCA;gBACxCA,IAAIA,YAAYA,GAA+BA,IAAIA,CAACA;gBACpDA,IAAIA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;gBACpBA,IAAIA,CAACA,KAAKA,CAACA,YAAYA,CAACA,eAAeA,CAACA,CAACA;gBACzCA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBAChBA,IAAIA,CAACA,EAAEA,CAACA,aAAaA,CAACA,YAAYA,CAACA,IAAIA,CAACA,CAACA;gBACzCA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;gBACfA,KAAKA,CAACA;YACRA,KAAKA,iCAAqCA;gBACxCA,IAAIA,CAACA,gCAAgCA,CAA8BA,IAAKA,CAACA,UAAUA,CAACA,CAACA;gBACrFA,KAAKA,CAACA;YAERA;gBACEA,MAAMA,CAACA,KAAKA,CAACA;QACjBA,CAACA;QACDA,MAAMA,CAACA,IAAIA,CAACA;IACdA,CAACA;IAEcF,gCAAeA,GAA9BA,UAA+BA,CAAqBA;QAClDG,uCAAuCA;YACnCA,IAAIA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA;QAC9BA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;YACbA,KAAKA,OAAOA,CAACA;YACbA,KAAKA,YAAYA,CAACA;YAClBA,KAAKA,YAAYA,CAACA;YAClBA,KAAKA,UAAUA,CAACA;YAChBA,KAAKA,YAAYA;gBACfA,MAAMA,CAACA,IAAIA,CAACA;YACdA;gBACEA,MAAMA,CAACA,KAAKA,CAACA;QACjBA,CAACA;IACHA,CAACA;IAEOH,2DAAgCA,GAAxCA,UAAyCA,IAAmBA;QAC1DI,6CAA6CA;YACzCA,UAAUA,GAAqBA,IAAIA,CAACA;QACxCA,IAAIA,IAAIA,GAAGA,UAAUA,CAACA,IAAIA,CAACA;QAC3BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA;YACxBA,wCAAwCA;YACxCA,IAAIA,GAAGA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;QAC3BA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;YAClCA,0CAA0CA;YAC1CA,IAAIA,GAAGA,UAAUA,GAAGA,IAAIA,CAACA;QAC3BA,CAACA;QACDA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,SAASA,CAACA,IAAIA,GAAGA,OAAOA,CAACA,CAACA,CAACA;IAC5CA,CAACA;IAEOJ,wCAAaA,GAArBA,UAAsBA,CAAuBA;QAC3CK,IAAIA,QAAQA,GAAGA,CAACA,CAACA,YAAYA,CAACA,aAAaA,CAACA;QAC5CA,EAAEA,CAACA,CAACA,QAAQA,CAACA,IAAIA,IAAIA,sBAA0BA,CAACA;YAACA,MAAMA,CAACA,KAAKA,CAACA;QAC9DA,IAAIA,QAAQA,GAAqBA,QAASA,CAACA,QAAQA,CAACA;QACpDA,4FAA4FA;QAC5FA,0DAA0DA;QAC1DA,EAAEA,CAACA,CAACA,QAAQA,CAACA,MAAMA,KAAKA,CAACA,CAACA;YAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA,EAAEA,mBAAmBA,CAACA,CAACA;QACpEA,MAAMA,CAACA,QAAQA,CAACA,KAAKA,CAACA,gBAAgBA,CAACA,eAAeA,CAACA,CAACA;IAC1DA,CAACA;IAEOL,wCAAaA,GAArBA,UAAsBA,EAAgCA;QACpDM,MAAMA,CAACA,EAAEA,CAACA,MAAMA,CAACA,UAACA,CAACA,IAAKA,OAAAA,CAACA,gBAAgBA,CAACA,eAAeA,CAACA,CAACA,CAACA,EAApCA,CAAoCA,CAACA,CAACA;IAChEA,CAACA;IAgBDN,yCAAcA,GAAdA,UAAeA,WAAoBA;QACjCO,IAAIA,QAAQA,GAAGA,IAAIA,CAACA,mBAAmBA,CAACA,WAAWA,CAACA,CAACA;QACrDA,IAAIA,KAAKA,GAAGA,QAAQA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA;QAChCA,MAAMA,CAACA,KAAKA,CAACA,MAAMA,CAACA,UAACA,CAACA,IAAKA,OAAAA,CAACA,CAACA,MAAMA,GAAGA,CAACA,EAAZA,CAAYA,CAACA;aACnCA,GAAGA,CAACA,UAACA,CAACA,IAAKA,OAAAA,CAACA,CAACA,OAAOA,CAACA,SAASA,EAAEA,GAAGA,CAACA,EAAzBA,CAAyBA,CAACA;aACrCA,GAAGA,CAACA,UAACA,CAACA,IAAKA,OAAAA,CAACA,CAACA,OAAOA,CAACA,WAAWA,EAAEA,EAAEA,CAACA,EAA1BA,CAA0BA,CAACA;aACtCA,GAAGA,CAACA,UAACA,CAACA,IAAKA,OAAAA,gBAAgBA,CAACA,mBAAmBA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,CAACA,GAAGA,CAACA,EAAnEA,CAAmEA,CAACA;aAC/EA,IAAIA,CAACA,GAAGA,CAACA,CAACA;IACjBA,CAACA;IAtBDP,gCAAgCA;IAChCA,uEAAuEA;IACxDA,oCAAmBA,GAC9BA,CAACA,wFAAwFA;QACxFA,yFAAyFA;QACzFA,YAAYA,CAACA;SACTA,KAAKA,CAACA,GAAGA,CAACA,CAACA;IAEpBA,+CAA+CA;IAChCA,oCAAmBA,GAC9BA,CAACA,yFAAyFA;QACzFA,qDAAqDA,CAACA;SAClDA,KAAKA,CAACA,GAAGA,CAACA,CAACA;IAWtBA,uBAACA;AAADA,CAhKA,EAA8C,IAAI,CAAC,cAAc,EAgKhE;AAhKD,qCAgKC,CAAA","file":"module.js","sourcesContent":["/// <reference path='../node_modules/typescript/bin/typescript.d.ts' />\nimport ts = require('typescript');\nimport base = require('./base');\nimport ts2dart = require('./main');\nimport {FacadeConverter} from './facade_converter';\n\nexport default class ModuleTranspiler extends base.TranspilerBase {\n  constructor(tr: ts2dart.Transpiler, private fc: FacadeConverter,\n              private generateLibraryName: boolean) {\n    super(tr);\n  }\n\n  visitNode(node: ts.Node): boolean {\n    switch (node.kind) {\n      case ts.SyntaxKind.SourceFile:\n        if (this.generateLibraryName) {\n          this.emit('library');\n          this.emit(this.getLibraryName());\n          this.emit(';');\n        }\n        ts.forEachChild(node, this.visit.bind(this));\n        break;\n      case ts.SyntaxKind.EndOfFileToken:\n        ts.forEachChild(node, this.visit.bind(this));\n        break;\n      case ts.SyntaxKind.ImportDeclaration:\n        var importDecl = <ts.ImportDeclaration>node;\n        if (this.isEmptyImport(importDecl)) return true;\n        this.emit('import');\n        this.visitExternalModuleReferenceExpr(importDecl.moduleSpecifier);\n        if (importDecl.importClause) {\n          this.visit(importDecl.importClause);\n        } else {\n          this.reportError(importDecl, 'bare import is unsupported');\n        }\n        this.emit(';');\n        break;\n      case ts.SyntaxKind.ImportClause:\n        var importClause = <ts.ImportClause>node;\n        if (importClause.name) this.fc.visitTypeName(importClause.name);\n        if (importClause.namedBindings) {\n          this.visit(importClause.namedBindings);\n        }\n        break;\n      case ts.SyntaxKind.NamespaceImport:\n        var nsImport = <ts.NamespaceImport>node;\n        this.emit('as');\n        this.fc.visitTypeName(nsImport.name);\n        break;\n      case ts.SyntaxKind.NamedImports:\n        this.emit('show');\n        var used = this.filterImports((<ts.NamedImports>node).elements);\n        if (used.length === 0) {\n          this.reportError(node, 'internal error, used imports must not be empty');\n        }\n        this.visitList(used);\n        break;\n      case ts.SyntaxKind.NamedExports:\n        var exportElements = (<ts.NamedExports>node).elements;\n        this.emit('show');\n        if (exportElements.length === 0) this.reportError(node, 'empty export list');\n        this.visitList((<ts.NamedExports>node).elements);\n        break;\n      case ts.SyntaxKind.ImportSpecifier:\n      case ts.SyntaxKind.ExportSpecifier:\n        var spec = <ts.ImportOrExportSpecifier>node;\n        if (spec.propertyName) {\n          this.reportError(spec.propertyName, 'import/export renames are unsupported in Dart');\n        }\n        this.fc.visitTypeName(spec.name);\n        break;\n      case ts.SyntaxKind.ExportDeclaration:\n        var exportDecl = <ts.ExportDeclaration>node;\n        this.emit('export');\n        if (exportDecl.moduleSpecifier) {\n          this.visitExternalModuleReferenceExpr(exportDecl.moduleSpecifier);\n        } else {\n          this.reportError(node, 're-exports must have a module URL (export x from \"./y\").');\n        }\n        if (exportDecl.exportClause) this.visit(exportDecl.exportClause);\n        this.emit(';');\n        break;\n      case ts.SyntaxKind.ImportEqualsDeclaration:\n        var importEqDecl = <ts.ImportEqualsDeclaration>node;\n        this.emit('import');\n        this.visit(importEqDecl.moduleReference);\n        this.emit('as');\n        this.fc.visitTypeName(importEqDecl.name);\n        this.emit(';');\n        break;\n      case ts.SyntaxKind.ExternalModuleReference:\n        this.visitExternalModuleReferenceExpr((<ts.ExternalModuleReference>node).expression);\n        break;\n\n      default:\n        return false;\n    }\n    return true;\n  }\n\n  private static isIgnoredImport(e: ts.ImportSpecifier) {\n    // TODO: unify with facade_converter.ts\n    var name = base.ident(e.name);\n    switch (name) {\n      case 'CONST':\n      case 'CONST_EXPR':\n      case 'forwardRef':\n      case 'ABSTRACT':\n      case 'IMPLEMENTS':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  private visitExternalModuleReferenceExpr(expr: ts.Expression) {\n    // TODO: what if this isn't a string literal?\n    var moduleName = <ts.StringLiteral>expr;\n    var text = moduleName.text;\n    if (text.match(/^\\.\\//)) {\n      // Strip './' to be more Dart-idiomatic.\n      text = text.substring(2);\n    } else if (!text.match(/^\\.\\.\\//)) {\n      // Unprefixed imports are package imports.\n      text = 'package:' + text;\n    }\n    this.emit(JSON.stringify(text + '.dart'));\n  }\n\n  private isEmptyImport(n: ts.ImportDeclaration): boolean {\n    var bindings = n.importClause.namedBindings;\n    if (bindings.kind != ts.SyntaxKind.NamedImports) return false;\n    var elements = (<ts.NamedImports>bindings).elements;\n    // An import list being empty *after* filtering is ok, but if it's empty in the code itself,\n    // it's nonsensical code, so probably a programming error.\n    if (elements.length === 0) this.reportError(n, 'empty import list');\n    return elements.every(ModuleTranspiler.isIgnoredImport);\n  }\n\n  private filterImports(ns: ts.ImportOrExportSpecifier[]) {\n    return ns.filter((e) => !ModuleTranspiler.isIgnoredImport(e));\n  }\n\n  // For the Dart keyword list see\n  // https://www.dartlang.org/docs/dart-up-and-running/ch02.html#keywords\n  private static DART_RESERVED_WORDS =\n      ('assert break case catch class const continue default do else enum extends false final ' +\n       'finally for if in is new null rethrow return super switch this throw true try var void ' +\n       'while with')\n          .split(/ /);\n\n  // These are the built-in and limited keywords.\n  private static DART_OTHER_KEYWORDS =\n      ('abstract as async await deferred dynamic export external factory get implements import ' +\n       'library operator part set static sync typedef yield')\n          .split(/ /);\n\n  getLibraryName(nameForTest?: string) {\n    var fileName = this.getRelativeFileName(nameForTest);\n    var parts = fileName.split('/');\n    return parts.filter((p) => p.length > 0)\n        .map((p) => p.replace(/[^\\w.]/g, '_'))\n        .map((p) => p.replace(/\\.[jt]s$/g, ''))\n        .map((p) => ModuleTranspiler.DART_RESERVED_WORDS.indexOf(p) != -1 ? '_' + p : p)\n        .join('.');\n  }\n}\n"],"sourceRoot":"/source/"}